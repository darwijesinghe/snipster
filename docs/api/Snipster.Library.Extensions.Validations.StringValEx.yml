### YamlMime:ManagedReference
items:
- uid: Snipster.Library.Extensions.Validations.StringValEx
  commentId: T:Snipster.Library.Extensions.Validations.StringValEx
  id: StringValEx
  parent: Snipster.Library.Extensions.Validations
  children:
  - Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic(System.String)
  - Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric(System.String)
  - Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase(System.String,System.String)
  - Snipster.Library.Extensions.Validations.StringValEx.IsNumeric(System.String)
  - Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone(System.String)
  - Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone(System.String)
  langs:
  - csharp
  - vb
  name: StringValEx
  nameWithType: StringValEx
  fullName: Snipster.Library.Extensions.Validations.StringValEx
  type: Class
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: StringValEx
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 8
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Provides various extensions for validating strings.
  example: []
  syntax:
    content: public static class StringValEx
    content.vb: Public Module StringValEx
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase(System.String,System.String)
  commentId: M:Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase(System.String,System.String)
  id: IsContainsIgnoreCase(System.String,System.String)
  isExtensionMethod: true
  parent: Snipster.Library.Extensions.Validations.StringValEx
  langs:
  - csharp
  - vb
  name: IsContainsIgnoreCase(string, string)
  nameWithType: StringValEx.IsContainsIgnoreCase(string, string)
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase(string, string)
  type: Method
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: IsContainsIgnoreCase
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 18
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Checks if the string contains another string with case-insensitive comparison.
  example: []
  syntax:
    content: public static bool IsContainsIgnoreCase(this string source, string toCheck)
    parameters:
    - id: source
      type: System.String
      description: The source string to search within.
    - id: toCheck
      type: System.String
      description: The string to check for within the source string.
    return:
      type: System.Boolean
      description: True if the source string contains the specified string, ignoring case; otherwise, false.
    content.vb: Public Shared Function IsContainsIgnoreCase(source As String, toCheck As String) As Boolean
  overload: Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase*
  nameWithType.vb: StringValEx.IsContainsIgnoreCase(String, String)
  fullName.vb: Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase(String, String)
  name.vb: IsContainsIgnoreCase(String, String)
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone(System.String)
  commentId: M:Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone(System.String)
  id: IsValidSriLankanPhone(System.String)
  isExtensionMethod: true
  parent: Snipster.Library.Extensions.Validations.StringValEx
  langs:
  - csharp
  - vb
  name: IsValidSriLankanPhone(string)
  nameWithType: StringValEx.IsValidSriLankanPhone(string)
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone(string)
  type: Method
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: IsValidSriLankanPhone
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 30
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Validates whether the string is a valid Sri Lankan phone number (starting with 07, 10 digits).
  example: []
  syntax:
    content: public static bool IsValidSriLankanPhone(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string to validate.
    return:
      type: System.Boolean
      description: True if the string is a valid Sri Lankan phone number; otherwise, false.
    content.vb: Public Shared Function IsValidSriLankanPhone(input As String) As Boolean
  overload: Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone*
  nameWithType.vb: StringValEx.IsValidSriLankanPhone(String)
  fullName.vb: Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone(String)
  name.vb: IsValidSriLankanPhone(String)
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone(System.String)
  commentId: M:Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone(System.String)
  id: IsValidInternationalPhone(System.String)
  isExtensionMethod: true
  parent: Snipster.Library.Extensions.Validations.StringValEx
  langs:
  - csharp
  - vb
  name: IsValidInternationalPhone(string)
  nameWithType: StringValEx.IsValidInternationalPhone(string)
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone(string)
  type: Method
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: IsValidInternationalPhone
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 45
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Checks if the string is a valid international phone number (starts with + and contains 10â€“15 digits).
  example: []
  syntax:
    content: public static bool IsValidInternationalPhone(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string to validate.
    return:
      type: System.Boolean
      description: True if the string is a valid international phone number; otherwise, false.
    content.vb: Public Shared Function IsValidInternationalPhone(input As String) As Boolean
  overload: Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone*
  nameWithType.vb: StringValEx.IsValidInternationalPhone(String)
  fullName.vb: Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone(String)
  name.vb: IsValidInternationalPhone(String)
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsNumeric(System.String)
  commentId: M:Snipster.Library.Extensions.Validations.StringValEx.IsNumeric(System.String)
  id: IsNumeric(System.String)
  isExtensionMethod: true
  parent: Snipster.Library.Extensions.Validations.StringValEx
  langs:
  - csharp
  - vb
  name: IsNumeric(string)
  nameWithType: StringValEx.IsNumeric(string)
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsNumeric(string)
  type: Method
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: IsNumeric
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 60
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Validates that a string contains only digits.
  example: []
  syntax:
    content: public static bool IsNumeric(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string to validate.
    return:
      type: System.Boolean
      description: True if the string contains only digits; otherwise, false.
    content.vb: Public Shared Function IsNumeric(input As String) As Boolean
  overload: Snipster.Library.Extensions.Validations.StringValEx.IsNumeric*
  nameWithType.vb: StringValEx.IsNumeric(String)
  fullName.vb: Snipster.Library.Extensions.Validations.StringValEx.IsNumeric(String)
  name.vb: IsNumeric(String)
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic(System.String)
  commentId: M:Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic(System.String)
  id: IsAlphabetic(System.String)
  isExtensionMethod: true
  parent: Snipster.Library.Extensions.Validations.StringValEx
  langs:
  - csharp
  - vb
  name: IsAlphabetic(string)
  nameWithType: StringValEx.IsAlphabetic(string)
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic(string)
  type: Method
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: IsAlphabetic
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 72
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Validates that a string contains only letters (no digits or symbols).
  example: []
  syntax:
    content: public static bool IsAlphabetic(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string to validate.
    return:
      type: System.Boolean
      description: True if the string contains only letters; otherwise, false.
    content.vb: Public Shared Function IsAlphabetic(input As String) As Boolean
  overload: Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic*
  nameWithType.vb: StringValEx.IsAlphabetic(String)
  fullName.vb: Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic(String)
  name.vb: IsAlphabetic(String)
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric(System.String)
  commentId: M:Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric(System.String)
  id: IsAlphanumeric(System.String)
  isExtensionMethod: true
  parent: Snipster.Library.Extensions.Validations.StringValEx
  langs:
  - csharp
  - vb
  name: IsAlphanumeric(string)
  nameWithType: StringValEx.IsAlphanumeric(string)
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric(string)
  type: Method
  source:
    remote:
      path: Snipster.Library/Extensions/Validations/StringValEx.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: IsAlphanumeric
    path: ../Snipster.Library/Extensions/Validations/StringValEx.cs
    startLine: 84
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Extensions.Validations
  summary: Validates that a string contains only letters or numbers.
  example: []
  syntax:
    content: public static bool IsAlphanumeric(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string to validate.
    return:
      type: System.Boolean
      description: True if the string contains only letters or numbers; otherwise, false.
    content.vb: Public Shared Function IsAlphanumeric(input As String) As Boolean
  overload: Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric*
  nameWithType.vb: StringValEx.IsAlphanumeric(String)
  fullName.vb: Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric(String)
  name.vb: IsAlphanumeric(String)
references:
- uid: Snipster.Library.Extensions.Validations
  commentId: N:Snipster.Library.Extensions.Validations
  href: Snipster.html
  name: Snipster.Library.Extensions.Validations
  nameWithType: Snipster.Library.Extensions.Validations
  fullName: Snipster.Library.Extensions.Validations
  spec.csharp:
  - uid: Snipster
    name: Snipster
    href: Snipster.html
  - name: .
  - uid: Snipster.Library
    name: Library
    href: Snipster.Library.html
  - name: .
  - uid: Snipster.Library.Extensions
    name: Extensions
    href: Snipster.Library.Extensions.html
  - name: .
  - uid: Snipster.Library.Extensions.Validations
    name: Validations
    href: Snipster.Library.Extensions.Validations.html
  spec.vb:
  - uid: Snipster
    name: Snipster
    href: Snipster.html
  - name: .
  - uid: Snipster.Library
    name: Library
    href: Snipster.Library.html
  - name: .
  - uid: Snipster.Library.Extensions
    name: Extensions
    href: Snipster.Library.Extensions.html
  - name: .
  - uid: Snipster.Library.Extensions.Validations
    name: Validations
    href: Snipster.Library.Extensions.Validations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase*
  commentId: Overload:Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase
  href: Snipster.Library.Extensions.Validations.StringValEx.html#Snipster_Library_Extensions_Validations_StringValEx_IsContainsIgnoreCase_System_String_System_String_
  name: IsContainsIgnoreCase
  nameWithType: StringValEx.IsContainsIgnoreCase
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsContainsIgnoreCase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone*
  commentId: Overload:Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone
  href: Snipster.Library.Extensions.Validations.StringValEx.html#Snipster_Library_Extensions_Validations_StringValEx_IsValidSriLankanPhone_System_String_
  name: IsValidSriLankanPhone
  nameWithType: StringValEx.IsValidSriLankanPhone
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsValidSriLankanPhone
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone*
  commentId: Overload:Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone
  href: Snipster.Library.Extensions.Validations.StringValEx.html#Snipster_Library_Extensions_Validations_StringValEx_IsValidInternationalPhone_System_String_
  name: IsValidInternationalPhone
  nameWithType: StringValEx.IsValidInternationalPhone
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsValidInternationalPhone
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsNumeric*
  commentId: Overload:Snipster.Library.Extensions.Validations.StringValEx.IsNumeric
  href: Snipster.Library.Extensions.Validations.StringValEx.html#Snipster_Library_Extensions_Validations_StringValEx_IsNumeric_System_String_
  name: IsNumeric
  nameWithType: StringValEx.IsNumeric
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsNumeric
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic*
  commentId: Overload:Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic
  href: Snipster.Library.Extensions.Validations.StringValEx.html#Snipster_Library_Extensions_Validations_StringValEx_IsAlphabetic_System_String_
  name: IsAlphabetic
  nameWithType: StringValEx.IsAlphabetic
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsAlphabetic
- uid: Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric*
  commentId: Overload:Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric
  href: Snipster.Library.Extensions.Validations.StringValEx.html#Snipster_Library_Extensions_Validations_StringValEx_IsAlphanumeric_System_String_
  name: IsAlphanumeric
  nameWithType: StringValEx.IsAlphanumeric
  fullName: Snipster.Library.Extensions.Validations.StringValEx.IsAlphanumeric
