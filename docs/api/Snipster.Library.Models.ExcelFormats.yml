### YamlMime:ManagedReference
items:
- uid: Snipster.Library.Models.ExcelFormats
  commentId: T:Snipster.Library.Models.ExcelFormats
  id: ExcelFormats
  parent: Snipster.Library.Models
  children:
  - Snipster.Library.Models.ExcelFormats.Currency
  - Snipster.Library.Models.ExcelFormats.DateLong
  - Snipster.Library.Models.ExcelFormats.DateShort
  - Snipster.Library.Models.ExcelFormats.DateTime
  - Snipster.Library.Models.ExcelFormats.Double
  - Snipster.Library.Models.ExcelFormats.General
  - Snipster.Library.Models.ExcelFormats.Integer
  - Snipster.Library.Models.ExcelFormats.Percent
  - Snipster.Library.Models.ExcelFormats.Text
  langs:
  - csharp
  - vb
  name: ExcelFormats
  nameWithType: ExcelFormats
  fullName: Snipster.Library.Models.ExcelFormats
  type: Class
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: ExcelFormats
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 6
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: >-
    Provides commonly used Excel number, date, and text format strings.

    Use these constants when defining <xref href="Snipster.Library.Models.ExcelColumn.Format" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class ExcelFormats
    content.vb: Public Module ExcelFormats
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Snipster.Library.Models.ExcelFormats.Integer
  commentId: F:Snipster.Library.Models.ExcelFormats.Integer
  id: Integer
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: ExcelFormats.Integer
  fullName: Snipster.Library.Models.ExcelFormats.Integer
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: Integer
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 13
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Whole numbers with thousands separator (e.g., 1,234).
  example: []
  syntax:
    content: public const string Integer = "#,##0"
    return:
      type: System.String
    content.vb: Public Const Integer As String = "#,##0"
- uid: Snipster.Library.Models.ExcelFormats.Double
  commentId: F:Snipster.Library.Models.ExcelFormats.Double
  id: Double
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: ExcelFormats.Double
  fullName: Snipster.Library.Models.ExcelFormats.Double
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: Double
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 18
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Double with thousands separator and two decimals (e.g., 1,234.56).
  example: []
  syntax:
    content: public const string Double = "#,##0.00"
    return:
      type: System.String
    content.vb: Public Const Double As String = "#,##0.00"
- uid: Snipster.Library.Models.ExcelFormats.Currency
  commentId: F:Snipster.Library.Models.ExcelFormats.Currency
  id: Currency
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: ExcelFormats.Currency
  fullName: Snipster.Library.Models.ExcelFormats.Currency
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: Currency
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 23
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Currency with symbol and two decimals (e.g., $1,234.56).
  example: []
  syntax:
    content: public const string Currency = "$#,##0.00"
    return:
      type: System.String
    content.vb: Public Const Currency As String = "$#,##0.00"
- uid: Snipster.Library.Models.ExcelFormats.Percent
  commentId: F:Snipster.Library.Models.ExcelFormats.Percent
  id: Percent
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: Percent
  nameWithType: ExcelFormats.Percent
  fullName: Snipster.Library.Models.ExcelFormats.Percent
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: Percent
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 28
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Percentage with two decimals (e.g., 12.34%).
  example: []
  syntax:
    content: public const string Percent = "0.00%"
    return:
      type: System.String
    content.vb: Public Const Percent As String = "0.00%"
- uid: Snipster.Library.Models.ExcelFormats.DateShort
  commentId: F:Snipster.Library.Models.ExcelFormats.DateShort
  id: DateShort
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: DateShort
  nameWithType: ExcelFormats.DateShort
  fullName: Snipster.Library.Models.ExcelFormats.DateShort
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: DateShort
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 35
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Short date format (e.g., 2025-09-20).
  example: []
  syntax:
    content: public const string DateShort = "yyyy-MM-dd"
    return:
      type: System.String
    content.vb: Public Const DateShort As String = "yyyy-MM-dd"
- uid: Snipster.Library.Models.ExcelFormats.DateLong
  commentId: F:Snipster.Library.Models.ExcelFormats.DateLong
  id: DateLong
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: DateLong
  nameWithType: ExcelFormats.DateLong
  fullName: Snipster.Library.Models.ExcelFormats.DateLong
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: DateLong
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 40
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Long date format (e.g., 20-Sep-2025).
  example: []
  syntax:
    content: public const string DateLong = "dddd, MMMM dd, yyyy"
    return:
      type: System.String
    content.vb: Public Const DateLong As String = "dddd, MMMM dd, yyyy"
- uid: Snipster.Library.Models.ExcelFormats.DateTime
  commentId: F:Snipster.Library.Models.ExcelFormats.DateTime
  id: DateTime
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: DateTime
  nameWithType: ExcelFormats.DateTime
  fullName: Snipster.Library.Models.ExcelFormats.DateTime
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: DateTime
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 45
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Date and time format (e.g., 2025-09-20 18:45).
  example: []
  syntax:
    content: public const string DateTime = "yyyy-MM-dd HH:mm"
    return:
      type: System.String
    content.vb: Public Const DateTime As String = "yyyy-MM-dd HH:mm"
- uid: Snipster.Library.Models.ExcelFormats.General
  commentId: F:Snipster.Library.Models.ExcelFormats.General
  id: General
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: General
  nameWithType: ExcelFormats.General
  fullName: Snipster.Library.Models.ExcelFormats.General
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: General
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 52
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: General format (default, no specific formatting).
  example: []
  syntax:
    content: public const string General = "General"
    return:
      type: System.String
    content.vb: Public Const General As String = "General"
- uid: Snipster.Library.Models.ExcelFormats.Text
  commentId: F:Snipster.Library.Models.ExcelFormats.Text
  id: Text
  parent: Snipster.Library.Models.ExcelFormats
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ExcelFormats.Text
  fullName: Snipster.Library.Models.ExcelFormats.Text
  type: Field
  source:
    remote:
      path: Snipster.Library/Models/ExcelFormats.cs
      branch: dev
      repo: https://github.com/darwijesinghe/Snipster.git
    id: Text
    path: ../Snipster.Library/Models/ExcelFormats.cs
    startLine: 57
  assemblies:
  - Snipster.Library
  namespace: Snipster.Library.Models
  summary: Text format (treats content as text).
  example: []
  syntax:
    content: public const string Text = "@"
    return:
      type: System.String
    content.vb: Public Const Text As String = "@"
references:
- uid: Snipster.Library.Models.ExcelColumn.Format
  commentId: P:Snipster.Library.Models.ExcelColumn.Format
  href: Snipster.Library.Models.ExcelColumn.html#Snipster_Library_Models_ExcelColumn_Format
  name: Format
  nameWithType: ExcelColumn.Format
  fullName: Snipster.Library.Models.ExcelColumn.Format
- uid: Snipster.Library.Models
  commentId: N:Snipster.Library.Models
  href: Snipster.html
  name: Snipster.Library.Models
  nameWithType: Snipster.Library.Models
  fullName: Snipster.Library.Models
  spec.csharp:
  - uid: Snipster
    name: Snipster
    href: Snipster.html
  - name: .
  - uid: Snipster.Library
    name: Library
    href: Snipster.Library.html
  - name: .
  - uid: Snipster.Library.Models
    name: Models
    href: Snipster.Library.Models.html
  spec.vb:
  - uid: Snipster
    name: Snipster
    href: Snipster.html
  - name: .
  - uid: Snipster.Library
    name: Library
    href: Snipster.Library.html
  - name: .
  - uid: Snipster.Library.Models
    name: Models
    href: Snipster.Library.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
